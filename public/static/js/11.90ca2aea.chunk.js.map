{"version":3,"sources":["components/Layout/HeaderPage/HeaderPage.js","hooks/useLoaderTable.js","hooks/useDimensionTable.js","components/Operador/ModalOperadores/ModalOperadores.js","pages/Operadores/TableOperadores.js","pages/Operadores/Operadores.js"],"names":["HeaderPage","children","className","id","style","height","useLoaderTable","url","params","take","useState","skip","dataState","setDataState","urlBase","process","siHayParams","Object","keys","length","forEach","key","index","getUrlBase","baseUrl","setBaseUrl","dataResul","setDataResult","dataReceived","products","lastSuccess","useRef","pending","infoHelperRef","requestDataIfNeeded","a","reload","infoHelper","toODataString","current","addUrl","convertQueryString","loadAxios","method","response","json","data","call","undefined","body","total","count","console","log","error","useEffect","handleCustomSearch","e","valueSearch","target","value","search","dataStateChange","objQuery","queryString","useDimensionTable","width","window","innerWidth","innerHeight","windowSize","handleResize","gridElement","document","querySelector","newHeight","addEventListener","removeEventListener","ModalOperadores","setOpenModal","editarOperador","reloadTable","operador","useSelector","state","operadores","dispatch","useDispatch","upload","previewImg","setPreviewImg","formik","useFormik","initialValues","validationSchema","Yup","onSubmit","values","formEmpleado","getElementById","formData","FormData","res","updateOperador","addOperador","Modal","Header","Content","Grid","Column","Form","handleSubmit","Group","Input","label","required","name","onChange","handleChange","errors","last_name","phone","occupation","as","Divider","email","type","password","display","ref","reader","FileReader","readAsDataURL","files","setFieldValue","onload","result","Image","size","src","image","wrapped","Button","color","marginTop","onClick","click","Actions","primary","TableOperadores","props","handleEliminar","handleEditar","sortable","pageable","onDataStateChange","cell","dataItem","overflow","Dropdown","icon","floating","button","Menu","Item","text","title","field","parseInt","status","ST_ACTIVO","Label","React","memo","Operadores","setEditarOperador","openModal","idEmpleado","Loading","pulse","getDataEditarOperador","remove","class","idOperador","Confirm","show","deleteOperador","open"],"mappings":"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","file":"static/js/11.90ca2aea.chunk.js","sourcesContent":["import './HeaderPage.scss';\n\nconst HeaderPage = ({ children }) => {\n  return ( \n    <div className=\"navslide navwrap\" id=\"app_content_toolbar\" >\n      <div className=\"ui menu icon borderless\" data-color=\"inverted white\" style={{height:40}}>\n        { children }\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderPage;","import { useEffect, useRef, useState } from \"react\";\nimport { toODataString } from \"@progress/kendo-data-query\";\nimport response from \"../config/network/response\";\nimport loadAxios from \"../config/network/loadAxios\";\n\nconst useLoaderTable = ({ url = null, params = {}, take = 20 }) => {\n  const [dataState, setDataState] = useState({\n    take: take,\n    skip: 0,\n  });\n\n  const getUrlBase = () => {\n    let urlBase = `${process.env.REACT_APP_API_URL}/${url}`;\n    let siHayParams = false;\n\n    if(Object.keys(params).length > 0)\n    {\n\n      siHayParams = true;\n      \n      (Object.keys(params)).forEach((key, index) => {\n        \n        if(index === 0) {\n          urlBase += `?${key}=${params[key]}&`;\n        } else {\n          urlBase += `${key}=${params[key]}&`;\n        }\n      })\n    }\n\n    if(!siHayParams) {\n      urlBase += '?';\n    }\n\n    return urlBase;\n  }\n\n  const [baseUrl, setBaseUrl] = useState(getUrlBase());\n\n  const [dataResul, setDataResult] = useState();\n\n  const dataStateChange = (e) => {\n    setDataState(e.dataState);\n  };\n\n  const dataReceived = (products) => {\n    setDataResult(products);\n  };\n\n  const lastSuccess = useRef(\"\");\n  const pending = useRef(\"\");\n  const infoHelperRef = useRef(null);\n\n  const handleCustomSearch = (e) => {\n    if (e.key === 'Enter') {\n      const valueSearch = e.target.value;\n      requestDataIfNeeded(true, {search: valueSearch});\n    }\n  }\n\n  const requestDataIfNeeded = async (reload = false, infoHelper = null) => {\n    \n    if ((toODataString(dataState) === lastSuccess.current) && !reload) {\n      return;\n    }\n\n    pending.current = toODataString(dataState);\n    \n    try {\n\n      let addUrl = '';\n\n      if(infoHelper || infoHelperRef.current) {\n       \n        if(infoHelper !== infoHelperRef.current && infoHelper) {\n          infoHelperRef.current = infoHelper;\n        }\n        addUrl = convertQueryString(infoHelperRef.current);\n      }\n\n      const response = await loadAxios({ url: baseUrl + pending.current + addUrl, method: \"GET\" });\n      const json = response.data; \n      \n      lastSuccess.current = pending.current;\n      pending.current = \"\";\n\n      if (toODataString(dataState) === lastSuccess.current) {\n        dataReceived.call(undefined, {\n          data: json.body.data,\n          total: json.body.count,\n        });\n      } else {\n        requestDataIfNeeded();\n      }\n    } catch (error) {\n      console.log(error);\n      response.error(error);\n    }\n  };\n\n  useEffect(() => {\n    requestDataIfNeeded();\n  }, [dataState]);\n\n  return { dataResul, dataState, handleCustomSearch, setBaseUrl, setDataState, baseUrl, dataStateChange, requestDataIfNeeded };\n};\n\nexport default useLoaderTable;\n\nconst convertQueryString = (objQuery = {}) => {\n  if (!Object.keys(objQuery).length) {\n    return '';\n  }\n\n  let queryString = '';\n\n  (Object.keys(objQuery)).forEach(key => {\n    queryString += `&$${key}=${objQuery[key]}&`;\n  })\n\n  return queryString;\n\n}\n","import { useEffect, useState } from \"react\";\n\nconst useDimensionTable = () => {\n\n  const [windowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      \n      // let containerBody = document.querySelector('.app__container_body');\n\n      // let newHeight = window.innerHeight - 90;\n      let gridElement = document.querySelector('.k-widget.k-grid.grid');\n      // var dataArea = gridElement.querySelector(\".k-grid-container\");\n\n\n      var newHeight = window.innerHeight - 90;\n      // let diffContainer = containerBody.clientHeight - newHeight;\n\n      // console.log(diffContainer)\n\n      // newHeight = newHeight - diffContainer;\n\n      // var diff = gridElement.clientHeight - dataArea.clientHeight;\n      //gridElement.height(newHeight);\n      // dataArea.style.height = (newHeight - diff) + 'px';\n      if (gridElement) {\n        gridElement.style.height = `${newHeight}px`; \n      }\n      // setWindowSize({\n      //   width: window.innerWidth,\n      //   height: newHeight\n      // })\n  \n    }\n  \n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize())\n  \n  }, [])\n\n  return { width: windowSize.width, height: windowSize.height }\n\n}\n\nexport default useDimensionTable;\n","import { Form, Button, Modal, Header, Divider, Grid, Image } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOperador, updateOperador } from \"../../../actions/operadorActions\";\nimport { DB_TRUE } from \"../../../config/constants\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\n\nconst ModalOperadores = ({ setOpenModal, editarOperador, reloadTable }) => {\n  \n  const { operador } = useSelector(state => state.operadores);\n  const dispatch = useDispatch();\n  const upload = useRef(null);\n  const [previewImg, setPreviewImg] = useState(null);\n\n  const clickUpload = () => {\n    upload.current.click();\n  };\n\n  const formik = useFormik({\n    initialValues: editarOperador ? {...operador} : initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async values => {\n      const formEmpleado = document.getElementById('formEmpleado');\n      const formData = new FormData(formEmpleado);\n\n      let res = null;\n      if(values.id) {\n        res = await dispatch(updateOperador(values.id, formData));\n      } else {\n        res = await dispatch(addOperador(formData));\n      }\n\n      if(res) {\n        reloadTable(true);\n        setOpenModal(false);\n      }\n    }\n  });\n\n  const renderImagen = e => {\n    let reader = new FileReader();\n\n    reader.readAsDataURL(e.target.files[0]);\n    formik.setFieldValue('nuevaImg', e.target.files)\n\n    reader.onload = () => {\n      // formik.setFieldValue('imagen', reader.result);\n      setPreviewImg(reader.result);\n    }\n  }\n\n  return (\n    <>\n        <Modal.Header>{editarOperador ? 'Editar' : 'Nuevo'} Operador</Modal.Header>\n        <Modal.Content>\n          <Grid>\n            <Grid.Column width={11}>\n            <Form onSubmit={formik.handleSubmit} id=\"formEmpleado\">\n              <Form.Group>\n                <Form.Input \n                  label=\"Nombres\" \n                  required \n                  width={7}\n                  name=\"name\"\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                  error={formik.errors.name}\n                />\n                <Form.Input \n                  label=\"Apellidos\" \n                  required \n                  width={7}\n                  name=\"last_name\"\n                  value={formik.values.last_name}\n                  onChange={formik.handleChange}\n                  error={formik.errors.last_name}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Input \n                  label=\"Teléfono\" \n                  width={7}\n                  name=\"phone\"\n                  value={formik.values.phone}\n                  onChange={formik.handleChange}\n                  error={formik.errors.phone}\n                />\n                <Form.Input \n                  label=\"Ocupación\" \n                  width={7}\n                  name=\"occupation\"\n                  value={formik.values.occupation}\n                  onChange={formik.handleChange}\n                  error={formik.errors.occupation}\n                />\n              </Form.Group>\n              <Header as=\"h3\">Datos de acceso</Header>\n              <Divider />\n              <Form.Group>\n                <Form.Input \n                  label=\"Correo\"\n                  required={!editarOperador}\n                  width={7}\n                  name=\"email\"  \n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  error={formik.errors.email}\n                />\n                <Form.Input\n                  type=\"password\"\n                  label={`${editarOperador ? 'Nueva contraseña' : 'Contraseña'}`}\n                  required={!editarOperador}\n                  name=\"password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  width={8}\n                />\n                </Form.Group>\n                <input type=\"file\" style={{ display: \"none\" }} ref={upload} name=\"imageBim\" onChange={renderImagen} />\n            </Form>\n            </Grid.Column>\n            <Grid.Column width={5}>\n              <Image\n                className=\"\"\n                size=\"medium\"\n                src={`${!previewImg ? `${process.env.REACT_APP_HOST_URL}/${formik.values.image}` : previewImg}`}\n                wrapped\n              />\n              <Button\n                color=\"grey\"\n                style={{ marginTop: 10 }}\n                onClick={clickUpload}\n              >\n                Click para seleccionar una imagen\n              </Button>\n            </Grid.Column>\n            </Grid>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => setOpenModal(false)}>Cancelar</Button>\n          <Button primary type=\"submit\" onClick={() => formik.handleSubmit()}>Guardar</Button>\n        </Modal.Actions>\n    </>\n  );\n};\n\nexport default ModalOperadores;\n\nconst initialValues = () => {\n  \n  return {\n    id: '',\n    name: \"\",\n    last_name: \"\",\n    occupation: \"\",\n    email: \"\",\n    password: \"\",\n  }\n}\n\nconst validationSchema = () => {\n  return {\n    name: Yup\n      .string()\n      .required('Este campo es obligatorio'),\n    last_name: Yup\n      .string()\n      .required('Este campo es obligatorio'),\n    email: Yup\n      .string().email('Formato no correcto')\n      .required('Este campo es requerido.'),\n    // password: Yup.string().min(6, 'Mínimo 6 caracteres'),\n  }\n}","import React from \"react\";\nimport {\n  Grid,\n  GridColumn as Column\n} from \"@progress/kendo-react-grid\";\nimport { Dropdown, Image, Label } from \"semantic-ui-react\";\nimport { ST_ACTIVO, ST_INACTIVO } from \"../../config/constants\";\nimport { updateEstadoOperador } from \"../../actions/operadorActions\";\nimport { Loading } from \"notiflix\";\n\nconst TableOperadores = (props) => {\n\n  const { dataStateChange, dataState, dataResul,requestDataIfNeeded, handleEliminar, handleEditar } = props;\n\n  // const handleEditarEstado = async (idOperador, nuevoEstado) => {\n  //   Loading.pulse();\n  //   const res = await updateEstadoOperador(idOperador, nuevoEstado);\n  //   if(res) {\n  //     requestDataIfNeeded(true);\n  //   } else {\n  //     Loading.remove();\n  //   }\n  // }\n\n  return (\n    <Grid\n      sortable={true}\n      pageable={true}\n      {...dataState}\n      {...dataResul}\n      onDataStateChange={dataStateChange}\n      className=\"grid\"\n    >\n      <Column\n        width={50}\n        cell={({ dataItem }) => (\n          <td style={{overflow: \"inherit\"}}>\n            <Dropdown\n              icon='ellipsis vertical'\n              floating\n              button\n              className='icon circular compact ui left pointing'\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  icon=\"edit\"\n                  className=\"blue\"\n                  text='Editar'\n                  onClick={() => handleEditar(dataItem.id)}\n                />\n                <Dropdown.Item\n                  icon=\"delete\"\n                  className=\"red\"\n                  text='Eliminar'\n                  onClick={() => handleEliminar(dataItem.id)}\n                />\n                {/* {\n                  parseInt(dataItem.estado) === ST_ACTIVO ? (\n                    <Dropdown.Item \n                      icon=\"lock\"\n                      text='Deshabilitar'\n                      onClick={() => handleEditarEstado(dataItem.id, ST_INACTIVO)}\n                    />\n                  ) : (\n                    <Dropdown.Item \n                      icon=\"unlock\"\n                      text='Activar'\n                      onClick={() => handleEditarEstado(dataItem.id, ST_ACTIVO)}\n                    />\n                  )\n                } */}\n              </Dropdown.Menu>\n            </Dropdown>\n          </td>\n        )}\n      />\n      <Column\n        width={50}\n        title='ID'\n        field=\"id\"\n      />\n      <Column \n        title=\"IMAGEN\"\n        width={110}\n        cell={({ dataItem }) => (\n          <td>\n            <Image width={50} height={50} src={`${process.env.REACT_APP_HOST_URL}${dataItem.image}`} />\n          </td>\n        )}\n      />\n      <Column width={250} field=\"name\" title=\"NOMBRES\" />\n      <Column width={250} field=\"last_name\" title=\"APELLIDOS\" />\n      <Column width={300} field=\"email\" title=\"EMAIL\" />\n      <Column width={150} field=\"phone\" title=\"TELÉFONO\" />\n      <Column width={200} field=\"occupation\" title=\"OCUPACIÓN\" />\n      <Column \n        title=\"ESTADO\"\n        width={120}\n        cell={({ dataItem }) => (\n          <td>\n            {\n                parseInt(dataItem.status) === ST_ACTIVO ? (\n                  <Label color=\"green\" size=\"tiny\">Activo</Label>\n              ) : (\n                <Label color=\"red\" size=\"tiny\">Inactivo</Label>\n              )\n            }\n          </td>\n        )}\n      />\n    </Grid>\n  )\n}\n\nexport default React.memo(TableOperadores);","import HeaderPage from \"../../components/Layout/HeaderPage\";\nimport useLoaderTable from \"../../hooks/useLoaderTable\";\nimport { Button, Input, Modal } from \"semantic-ui-react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport React, { useState } from \"react\";\nimport { Confirm, Loading } from \"notiflix\";\nimport ModalOperadores from \"../../components/Operador/ModalOperadores\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteOperador, getDataEditarOperador } from \"../../actions/operadorActions\";\nimport TableOperadores from './TableOperadores';\nimport useDimensionTable from '../../hooks/useDimensionTable';\n\nconst Operadores = () => {\n\n  const dispatch = useDispatch();\n  const { dataResul, dataState, dataStateChange, handleCustomSearch, requestDataIfNeeded } = useLoaderTable({ url: 'users'});\n  const [editarOperador, setEditarOperador] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  useDimensionTable();\n\n  const handleEditar = async idEmpleado => {\n    setEditarOperador(true)\n\n    Loading.pulse();\n    const res = await dispatch(getDataEditarOperador(idEmpleado));\n    if(res) {\n      setOpenModal(true);\n    }\n    Loading.remove();\n  }\n\n  const handleEliminar = (idOperador) => {\n    Confirm.show(\n      'OPERADORES',\n      `¿Desea eliminar al operador ${idOperador}?`,\n      'Aceptar',\n      'Cancelar',\n      function(){\n        dispatch(deleteOperador(idOperador, requestDataIfNeeded));\n      }\n    );\n  }\n\n  return ( \n    <div className=\"Operadores\">\n      <HeaderPage>\n        <div class=\"item ui colhidden\">\n          <button class=\"ui icon button\" onClick={() => requestDataIfNeeded(true)}>\n            <i class=\"sync icon\"></i>\n          </button>\n        </div>\n        <div className=\"item ui colhidden\">\n          <div className=\"ui big breadcrumb\">\n            <h2 className=\"section active\">OPERADORES</h2>\n          </div>\n        </div>\n        <div className=\"item ui colhidden\">\n          <Button icon onClick={async () => {\n              setEditarOperador(false);\n              Loading.pulse();\n              setOpenModal(true);              \n              Loading.remove();\n          }}>\n            <FaPlus /> Nuevo operador\n          </Button>\n        </div>\n        {/* <div className=\"right menu colhidden\">\n          <div className=\"item ui colhidden\">\n              <Input \n                icon='search'\n                onKeyDown={handleCustomSearch} \n                placeholder='Buscar operador...'\n              />\n          </div>\n        </div> */}\n      </HeaderPage>\n      <div className=\"Operadores__body app__container_body\">\n        <div className=\"Operadores__tabla\">\n          <TableOperadores \n            dataStateChange={dataStateChange}\n            dataState={dataState}\n            dataResul={dataResul}\n            handleEditar={handleEditar}\n            handleEliminar={handleEliminar}\n            requestDataIfNeeded={requestDataIfNeeded}\n          />\n        </div>\n      </div>\n      <Modal open={openModal}>\n        {\n          openModal ? <ModalOperadores \n              setOpenModal={setOpenModal}\n              editarOperador={editarOperador}\n              reloadTable={requestDataIfNeeded}\n              open={openModal}\n            /> : null\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default Operadores;\n"],"sourceRoot":""}