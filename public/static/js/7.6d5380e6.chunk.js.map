{"version":3,"sources":["components/Layout/HeaderPage/HeaderPage.js","hooks/useLoaderTable.js","actions/categoriasActions.js","actions/seccionActions.js","hooks/useDimensionTable.js","components/Shared/Modal/BasicModal/BasicModal.js","components/Categorias/FormCategorias/FormCategorias.js","components/Categorias/FormSubCategoria/FormSubCategoria.js","components/Categorias/TableSubCategorias/TableSubCategorias.js","pages/Categorias/Categorias.js"],"names":["HeaderPage","children","className","id","style","height","useLoaderTable","url","params","take","useState","skip","dataState","setDataState","urlBase","process","siHayParams","Object","keys","length","forEach","key","index","getUrlBase","baseUrl","setBaseUrl","dataResul","setDataResult","dataReceived","products","lastSuccess","useRef","pending","infoHelperRef","requestDataIfNeeded","a","reload","infoHelper","toODataString","current","addUrl","convertQueryString","loadAxios","method","response","json","data","call","undefined","body","total","count","console","log","error","useEffect","handleCustomSearch","e","valueSearch","target","value","search","dataStateChange","objQuery","queryString","getCategoriaByIdAsync","Promise","resolve","authAxios","get","res","status","STATUS_OK","addCategoria","datos","post","Notify","success","msg","updateCategoria","put","deleteCategoria","delete","getSubCategorias","idParent","getCategoriasAsync","getDataFichaCategoria","all","getSeccionsAsync","secciones","categoria","getSeccionById","addSeccion","updateSeccion","deleteSeccion","useDimensionTable","width","window","innerWidth","innerHeight","windowSize","handleResize","gridElement","document","querySelector","newHeight","addEventListener","removeEventListener","BasicModal","title","size","actions","show","rest","setShow","Modal","open","Header","Content","Actions","FormCategorias","forwardRef","props","ref","loadDataTable","idCategoria","setSecciones","formik","useFormik","initialValues","validationSchema","Yup","name","required","section_id","onSubmit","values","Loading","pulse","remove","useImperativeHandle","handleSubmit","submitForm","getCategoria","setValues","Form","Group","widths","Input","label","errors","onChange","handleChange","Field","control","Dropdown","options","listCategoria","text","getSeccionesOptions","selection","_","setFieldValue","FormSubCategorias","level","parent_id","TableSubCategorias","itemCategoria","dataItem","parent","as","sortable","pageable","onDataStateChange","scrollable","cell","overflow","icon","floating","button","Menu","Item","onClick","setIdSubCategoria","setShowSub","handleEliminar","field","Categorias","setIdCategoria","idSubCategoria","showSub","formRef","formRefSub","expanded","setExpanded","nombre","Confirm","class","Button","detail","onExpandChange","event","state","valor","expandField","Divider","primary","FormSubCategoria"],"mappings":"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","file":"static/js/7.6d5380e6.chunk.js","sourcesContent":["import './HeaderPage.scss';\n\nconst HeaderPage = ({ children }) => {\n  return ( \n    <div className=\"navslide navwrap\" id=\"app_content_toolbar\" >\n      <div className=\"ui menu icon borderless\" data-color=\"inverted white\" style={{height:40}}>\n        { children }\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderPage;","import { useEffect, useRef, useState } from \"react\";\nimport { toODataString } from \"@progress/kendo-data-query\";\nimport response from \"../config/network/response\";\nimport loadAxios from \"../config/network/loadAxios\";\n\nconst useLoaderTable = ({ url = null, params = {}, take = 20 }) => {\n  const [dataState, setDataState] = useState({\n    take: take,\n    skip: 0,\n  });\n\n  const getUrlBase = () => {\n    let urlBase = `${process.env.REACT_APP_API_URL}/${url}`;\n    let siHayParams = false;\n\n    if(Object.keys(params).length > 0)\n    {\n\n      siHayParams = true;\n      \n      (Object.keys(params)).forEach((key, index) => {\n        \n        if(index === 0) {\n          urlBase += `?${key}=${params[key]}&`;\n        } else {\n          urlBase += `${key}=${params[key]}&`;\n        }\n      })\n    }\n\n    if(!siHayParams) {\n      urlBase += '?';\n    }\n\n    return urlBase;\n  }\n\n  const [baseUrl, setBaseUrl] = useState(getUrlBase());\n\n  const [dataResul, setDataResult] = useState();\n\n  const dataStateChange = (e) => {\n    setDataState(e.dataState);\n  };\n\n  const dataReceived = (products) => {\n    setDataResult(products);\n  };\n\n  const lastSuccess = useRef(\"\");\n  const pending = useRef(\"\");\n  const infoHelperRef = useRef(null);\n\n  const handleCustomSearch = (e) => {\n    if (e.key === 'Enter') {\n      const valueSearch = e.target.value;\n      requestDataIfNeeded(true, {search: valueSearch});\n    }\n  }\n\n  const requestDataIfNeeded = async (reload = false, infoHelper = null) => {\n    \n    if ((toODataString(dataState) === lastSuccess.current) && !reload) {\n      return;\n    }\n\n    pending.current = toODataString(dataState);\n    \n    try {\n\n      let addUrl = '';\n\n      if(infoHelper || infoHelperRef.current) {\n       \n        if(infoHelper !== infoHelperRef.current && infoHelper) {\n          infoHelperRef.current = infoHelper;\n        }\n        addUrl = convertQueryString(infoHelperRef.current);\n      }\n\n      const response = await loadAxios({ url: baseUrl + pending.current + addUrl, method: \"GET\" });\n      const json = response.data; \n      \n      lastSuccess.current = pending.current;\n      pending.current = \"\";\n\n      if (toODataString(dataState) === lastSuccess.current) {\n        dataReceived.call(undefined, {\n          data: json.body.data,\n          total: json.body.count,\n        });\n      } else {\n        requestDataIfNeeded();\n      }\n    } catch (error) {\n      console.log(error);\n      response.error(error);\n    }\n  };\n\n  useEffect(() => {\n    requestDataIfNeeded();\n  }, [dataState]);\n\n  return { dataResul, dataState, handleCustomSearch, setBaseUrl, setDataState, baseUrl, dataStateChange, requestDataIfNeeded };\n};\n\nexport default useLoaderTable;\n\nconst convertQueryString = (objQuery = {}) => {\n  if (!Object.keys(objQuery).length) {\n    return '';\n  }\n\n  let queryString = '';\n\n  (Object.keys(objQuery)).forEach(key => {\n    queryString += `&$${key}=${objQuery[key]}&`;\n  })\n\n  return queryString;\n\n}\n","import { Notify } from \"notiflix\";\r\nimport authAxios from \"../config/authAxios\";\r\nimport { STATUS_OK } from \"../config/constants\";\r\nimport response from \"../config/network/response\";\r\nimport { getSeccionsAsync } from './seccionActions';\r\n\r\nexport const getCategoriaById = async (id) => {\r\n  \r\n    try {\r\n      const res = await authAxios.get(`/category/${id}`);\r\n\r\n      if(res.data.status === STATUS_OK) {\r\n        return (res.data.body);\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n}\r\n\r\nexport const getCategoriaByIdAsync = (id) => {\r\n  return new Promise( async (resolve) => {\r\n    try {\r\n\r\n      if(!id) {\r\n        resolve(null);\r\n      }\r\n\r\n      const res = await authAxios.get(`/category/${id}`);\r\n\r\n      if(res.data.status === STATUS_OK) {\r\n        resolve(res.data.body);\r\n      } else {\r\n        resolve(null);\r\n      }\r\n\r\n    } catch (error) {\r\n      resolve(null);\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const addCategoria = async (datos) => {\r\n  try {\r\n    \r\n    const res = await authAxios.post('/category', datos);\r\n\r\n    if(res.data.status === STATUS_OK){\r\n      Notify.success('Se creo correctamente.');\r\n      return true;\r\n    } else {\r\n      if(res.data.msg) {\r\n        response.error(null, res.data.msg);\r\n      } else {\r\n        response.error('Opps... hubo un error inesperador.');\r\n      }\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const updateCategoria = async (id, datos) => {\r\n  try {\r\n    \r\n    const res = await authAxios.put(`/category/${id}`, datos);\r\n\r\n    if(res.data.status === STATUS_OK){\r\n      Notify.success('Se editó correctamente.');\r\n      return true;\r\n    } else {\r\n      if(res.data.msg) {\r\n        response.error(null, res.data.msg);\r\n      } else {\r\n        response.error('Opps... hubo un error inesperador.');\r\n      }\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n} \r\n\r\n\r\nexport const deleteCategoria = async id => {\r\n  try {\r\n    const res = await authAxios.delete(`/category/${id}`);\r\n\r\n    if(res.data.status === STATUS_OK) {\r\n      response.success(null, 'Se elimino correctamente.');\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nexport const getCategorias = async () => {\r\n  try {\r\n    const res = await authAxios.get('/category');\r\n  \r\n    if(res.data.status === STATUS_OK) {\r\n      return res.data.body;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const getSubCategorias = async (idParent) => {\r\n  try {\r\n    const res = await authAxios.get(`/category?level=1&parent=${idParent}`);\r\n  \r\n    if(res.data.status === STATUS_OK) {\r\n      return res.data.body;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const getCategoriasAsync = async () => {\r\n  \r\n  return new Promise(async (resolve) => {\r\n    try {\r\n      const res = await authAxios.get('/category');\r\n    \r\n      if(res.data.status === STATUS_OK) {\r\n        resolve(res.data.body.data);\r\n      } else {\r\n        resolve(null);\r\n      }\r\n  \r\n    } catch (error) {\r\n      resolve(null);\r\n    }\r\n  })\r\n}\r\n\r\nexport const getDataFichaCategoria= async (id) => {\r\n  try {\r\n    const res = await Promise.all([getSeccionsAsync(), getCategoriaByIdAsync(id)]);\r\n\r\n    return {\r\n      secciones: res[0] ? res[0] : [],\r\n      categoria: res[1] ? res[1] : null\r\n    }\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    response.error(null, 'Opps... hubo un error inesperado');\r\n    return null;\r\n  }\r\n}\r\n","import { Notify } from \"notiflix\";\r\nimport authAxios from \"../config/authAxios\";\r\nimport { STATUS_OK } from \"../config/constants\";\r\nimport response from \"../config/network/response\";\r\n\r\nexport const getSeccionById = async (id) => {\r\n  \r\n    try {\r\n      const res = await authAxios.get(`/section/${id}`);\r\n\r\n      if(res.data.status === STATUS_OK) {\r\n        return (res.data.body);\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n}\r\n\r\nexport const addSeccion = async (datos) => {\r\n  try {\r\n    \r\n    const res = await authAxios.post('/section', datos);\r\n\r\n    if(res.data.status === STATUS_OK){\r\n      Notify.success('Se creo correctamente.');\r\n      return true;\r\n    } else {\r\n      if(res.data.msg) {\r\n        response.error(null, res.data.msg);\r\n      } else {\r\n        response.error('Opps... hubo un error inesperador.');\r\n      }\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const updateSeccion = async (id, datos) => {\r\n  try {\r\n    \r\n    const res = await authAxios.put(`/section/${id}`, datos);\r\n\r\n    if(res.data.status === STATUS_OK){\r\n      Notify.success('Se editó correctamente.');\r\n      return true;\r\n    } else {\r\n      if(res.data.msg) {\r\n        response.error(null, res.data.msg);\r\n      } else {\r\n        response.error('Opps... hubo un error inesperador.');\r\n      }\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n} \r\n\r\n\r\nexport const deleteSeccion = async id => {\r\n  try {\r\n    const res = await authAxios.delete(`/section/${id}`);\r\n\r\n    if(res.data.status === STATUS_OK) {\r\n      response.success(null, 'Se elimino correctamente.');\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const getSecciones = async () => {\r\n  try {\r\n    const res = await authAxios.get('/sections');\r\n  \r\n    if(res.data.status === STATUS_OK) {\r\n      return res.data.body;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  } catch (error) {\r\n    response.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const getSeccionsAsync = async () => {\r\n  \r\n  return new Promise(async (resolve) => {\r\n    try {\r\n      const res = await authAxios.get('/sections');\r\n    \r\n      if(res.data.status === STATUS_OK) {\r\n        resolve(res.data.body.data);\r\n      } else {\r\n        resolve(false);\r\n      }\r\n  \r\n    } catch (error) {\r\n      resolve(false);\r\n    }\r\n  })\r\n}\r\n","import { useEffect, useState } from \"react\";\n\nconst useDimensionTable = () => {\n\n  const [windowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      \n      // let containerBody = document.querySelector('.app__container_body');\n\n      // let newHeight = window.innerHeight - 90;\n      let gridElement = document.querySelector('.k-widget.k-grid.grid');\n      // var dataArea = gridElement.querySelector(\".k-grid-container\");\n\n\n      var newHeight = window.innerHeight - 90;\n      // let diffContainer = containerBody.clientHeight - newHeight;\n\n      // console.log(diffContainer)\n\n      // newHeight = newHeight - diffContainer;\n\n      // var diff = gridElement.clientHeight - dataArea.clientHeight;\n      //gridElement.height(newHeight);\n      // dataArea.style.height = (newHeight - diff) + 'px';\n      if (gridElement) {\n        gridElement.style.height = `${newHeight}px`; \n      }\n      // setWindowSize({\n      //   width: window.innerWidth,\n      //   height: newHeight\n      // })\n  \n    }\n  \n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize())\n  \n  }, [])\n\n  return { width: windowSize.width, height: windowSize.height }\n\n}\n\nexport default useDimensionTable;\n","import { Modal } from \"semantic-ui-react\";\r\n\r\nconst BasicModal = ({ title = '', children, size = 'small', actions, show = false, setShow, ...rest }) => {\r\n\r\n  return ( \r\n    <Modal open={show} size={size} {...rest}>\r\n      <Modal.Header>\r\n        {title}\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        {children}      \r\n      </Modal.Content>\r\n      {\r\n        actions && (\r\n          <Modal.Actions>\r\n          {actions}\r\n        </Modal.Actions>\r\n        )\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n \r\nexport default BasicModal;","import { forwardRef, useImperativeHandle } from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport { Dropdown, Form } from \"semantic-ui-react\";\r\nimport * as Yup from 'yup';\r\nimport { addCategoria, getDataFichaCategoria, updateCategoria } from '../../../actions/categoriasActions';\r\nimport { Loading, Notify } from 'notiflix';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst FormCategorias = forwardRef((props, ref) => {\r\n  \r\n  const { setShow, loadDataTable, idCategoria } = props;\r\n  const [secciones, setSecciones] = useState([]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      'name': '',\r\n      'icon': '',\r\n      'section_id': 0\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Este campo es requerido.'),\r\n      section_id: Yup.string().required('Este campo es requerido.')\r\n    }),\r\n    onSubmit: async values => {\r\n      Loading.pulse();\r\n\r\n      let res = null;\r\n\r\n      if(idCategoria) {\r\n        res = await updateCategoria(idCategoria, values);\r\n      } else {\r\n        res = await addCategoria(values);\r\n      }\r\n      \r\n      if(res) {\r\n        setShow(false);\r\n        loadDataTable(true);\r\n        return;\r\n      }\r\n      Loading.remove();\r\n    }\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit() {\r\n      formik.submitForm();\r\n    }\r\n  }))\r\n\r\n  const getSeccionesOptions = () => {\r\n    let listCategoria = [{ text: 'Seleccione', value:'0', key: 0 }];\r\n\r\n    secciones.forEach(categoria => {\r\n      listCategoria = [...listCategoria, {\r\n        key: categoria.id,\r\n        text: categoria.name,\r\n        value: categoria.id\r\n      }];\r\n    })\r\n\r\n    return listCategoria;\r\n  }\r\n\r\n  const getCategoria = async () => {\r\n\r\n    Loading.pulse();\r\n    const res = await getDataFichaCategoria(idCategoria);\r\n\r\n    if(res.categoria) {\r\n      formik.setValues(res.categoria);\r\n    }\r\n\r\n    if(res.secciones) {\r\n      setSecciones(res.secciones);\r\n    }\r\n\r\n    Loading.remove();\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n      getCategoria();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [idCategoria])\r\n  \r\n  return ( \r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <Form.Group widths='equal'>\r\n        <Form.Input\r\n          label=\"Nombre\"\r\n          name=\"name\"\r\n          required\r\n          value={formik.values.name}\r\n          error={formik.errors.name}\r\n          onChange={formik.handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Field required={true} width={16}>\r\n          <label>Sección</label>\r\n          <Form.Input \r\n            control={Dropdown}\r\n            options={getSeccionesOptions()}\r\n            name='section_id'\r\n            search selection\r\n            value={formik.values.section_id}\r\n            onChange={(_, data) => formik.setFieldValue('section_id', data.value)}\r\n            error={formik.errors.section_id}\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      {/* <Form.Group widths='equal'>\r\n        <Form.Input \r\n          label=\"Icono\"\r\n          name=\"icon\"\r\n          value={formik.values.icon}\r\n          error={formik.errors.icon}\r\n          onChange={formik.handleChange}\r\n        />\r\n      </Form.Group> */}\r\n    </Form>\r\n  );\r\n})\r\n \r\nexport default FormCategorias;","import { forwardRef, useImperativeHandle } from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport * as Yup from 'yup';\r\nimport { addCategoria, getDataFichaCategoria, updateCategoria } from '../../../actions/categoriasActions';\r\nimport { Loading } from 'notiflix';\r\nimport { useEffect } from 'react';\r\n\r\nconst FormSubCategorias = forwardRef((props, ref) => {\r\n  \r\n  const { setShow, loadDataTable, id, idParent } = props;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      'name': '',\r\n      'icon': '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Este campo es requerido.'),\r\n    }),\r\n    onSubmit: async values => {\r\n      Loading.pulse();\r\n\r\n      let res = null;\r\n      values.level = 1;\r\n      \r\n      values.parent_id = idParent;\r\n\r\n      if(id) {\r\n        res = await updateCategoria(id, values);\r\n      } else {\r\n        res = await addCategoria(values);\r\n      }\r\n      \r\n      if(res) {\r\n        setShow(false);\r\n        loadDataTable(true);\r\n        return;\r\n      }\r\n      Loading.remove();\r\n    }\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit() {\r\n      formik.submitForm();\r\n    }\r\n  }))\r\n\r\n  const getCategoria = async () => {\r\n\r\n    Loading.pulse();\r\n    const res = await getDataFichaCategoria(id);\r\n\r\n    if(res.categoria) {\r\n      formik.setValues(res.categoria);\r\n    }\r\n\r\n    Loading.remove();\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n      getCategoria();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id])\r\n  \r\n  return ( \r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <Form.Group widths='equal'>\r\n        <Form.Input\r\n          label=\"Nombre\"\r\n          name=\"name\"\r\n          required\r\n          value={formik.values.name}\r\n          error={formik.errors.name}\r\n          onChange={formik.handleChange}\r\n        />\r\n      </Form.Group>\r\n      {/* <Form.Group widths='equal'>\r\n        <Form.Input \r\n          label=\"Icono\"\r\n          name=\"icon\"\r\n          value={formik.values.icon}\r\n          error={formik.errors.icon}\r\n          onChange={formik.handleChange}\r\n        />\r\n      </Form.Group> */}\r\n    </Form>\r\n  );\r\n})\r\n \r\nexport default FormSubCategorias;","import {\r\n  Grid,\r\n  GridColumn as Column\r\n} from \"@progress/kendo-react-grid\";\r\nimport { Dropdown, Header } from \"semantic-ui-react\";\r\nimport useLoaderTable from \"../../../hooks/useLoaderTable\";\r\n\r\nconst TableSubCategorias = ({ dataItem: itemCategoria }) => {\r\n  const id = itemCategoria.id;\r\n  \r\n  const { dataResul, dataState, dataStateChange } = useLoaderTable({ url: 'category', take: 10, params: { level: 1, parent: id }});\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h3\">Subcategorías</Header>\r\n        <Grid\r\n            sortable={true}\r\n            pageable={true}\r\n            {...dataState}\r\n            {...dataResul}\r\n            onDataStateChange={dataStateChange}\r\n            className=\"grid\"\r\n            scrollable=\"none\"\r\n        >\r\n          <Column\r\n              width={50}\r\n              cell={({ dataItem }) => (\r\n                <td style={{overflow: \"inherit\"}}>\r\n                  <Dropdown\r\n                    icon='ellipsis vertical'\r\n                    floating\r\n                    button\r\n                    className='icon circular compact ui left pointing'\r\n                  >\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        icon=\"edit\"\r\n                        className=\"blue\"\r\n                        text='Editar'\r\n                        onClick={() => {\r\n                          itemCategoria.setIdSubCategoria(dataItem.id)\r\n                          itemCategoria.setShowSub(true)\r\n                        }}\r\n                      />\r\n                      <Dropdown.Item\r\n                        icon=\"delete\"\r\n                        className=\"red\"\r\n                        text='Eliminar'\r\n                        onClick={() => itemCategoria.handleEliminar(dataItem.id, dataItem.name)}\r\n                      />\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </td>\r\n              )}\r\n            />\r\n          <Column field=\"id\" title=\"ID\" width=\"100px\" />\r\n          <Column field=\"name\" title=\"NOMBRE\" />\r\n          <Column field=\"slug\" title=\"URL\" />\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n \r\nexport default TableSubCategorias;","import HeaderPage from \"../../components/Layout/HeaderPage\";\nimport BasicModal from \"../../components/Shared/Modal/BasicModal\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { Button, Dropdown, Divider } from \"semantic-ui-react\";\nimport FormCategorias from \"../../components/Categorias/FormCategorias\";\nimport { useState, useRef } from \"react\";\nimport useLoaderTable from \"../../hooks/useLoaderTable\";\nimport {\n  Grid,\n  GridColumn as Column\n} from \"@progress/kendo-react-grid\";\nimport { deleteCategoria } from \"../../actions/categoriasActions\";\nimport { Loading, Confirm } from \"notiflix\";\nimport useDimensionTable from \"../../hooks/useDimensionTable\";\nimport FormSubCategoria from \"../../components/Categorias/FormSubCategoria\";\nimport TableSubCategorias from \"../../components/Categorias/TableSubCategorias\";\n\nconst Categorias = () => {\n\n  const { dataResul, dataState, dataStateChange, requestDataIfNeeded } = useLoaderTable({ url: 'category', params: { level: 0 }});\n  const [idCategoria, setIdCategoria] = useState(null);\n  const [idSubCategoria, setIdSubCategoria] = useState(null);\n  const [show, setShow] = useState(false);\n  const [showSub, setShowSub] = useState(false);\n  const formRef = useRef();\n  const formRefSub = useRef();\n\n  useDimensionTable();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleEditar = id => {\n    setIdCategoria(id)\n    setShow(true);\n  }\n\n  const handleEliminar = (id, nombre) => {\n    Confirm.show(\n      'CATEGORÍAS',\n      `¿Desea eliminar a ${nombre}?`,\n      'Aceptar',\n      'Cancelar',\n      async function(){\n        \n        Loading.pulse();\n        const res = await deleteCategoria(id);\n\n        if(res) {\n          requestDataIfNeeded(true);\n          return;\n        }\n        Loading.remove();\n      }\n    );\n  }\n\n  const expandChange = (event) => {\n    setExpanded(state => !state);\n    event.value = !expanded;\n    event.dataItem.expanded = !expanded;\n\n    event.dataItem.setIdSubCategoria = id => setIdSubCategoria(id);\n    event.dataItem.setShowSub = valor => setShowSub(valor);\n    event.dataItem.handleEliminar = (id, nombre) => handleEliminar(id, nombre);\n\n  };\n\n  return (\n    <div className=\"Categorias\">\n      <HeaderPage>\n        <div className=\"item ui colhidden\">\n          <button class=\"ui icon button\" onClick={() => requestDataIfNeeded(true)}>\n            <i className=\"sync icon\"></i>\n          </button>\n        </div>\n        <div className=\"item ui colhidden\">\n          <div className=\"ui big breadcrumb\">\n            <h2 className=\"section active\">CATEGORIAS</h2>\n          </div>\n        </div>\n        <div className=\"item ui colhidden\">\n            <Button onClick={() => {\n              setIdCategoria(null);\n              setShow(true)\n            }} className=\"ui button\">\n              <FaPlus /> Nueva categoria\n            </Button>\n          </div>\n      </HeaderPage>\n      <div className=\"Categorias__body app__container_body\">\n          <div className=\"Categorias__tabla\">\n          <Grid\n            sortable={true}\n            pageable={true}\n            {...dataState}\n            {...dataResul}\n            onDataStateChange={dataStateChange}\n            className=\"grid\"\n            detail={TableSubCategorias}\n            onExpandChange={expandChange}\n            expandField=\"expanded\"\n          >\n            <Column\n              width={50}\n              cell={({ dataItem }) => (\n                <td style={{overflow: \"inherit\"}}>\n                  <Dropdown\n                    icon='ellipsis vertical'\n                    floating\n                    button\n                    className='icon circular compact ui left pointing'\n                  >\n                    <Dropdown.Menu>\n                      <Dropdown.Item\n                        icon=\"plus\"\n                        className=\"blue\"\n                        text='Agregar subcategoría'\n                        onClick={() => {\n                          setIdSubCategoria(null)\n                          setIdCategoria(dataItem.id)\n                          setShowSub(true)\n                        }}\n                      />\n                      <Divider />\n                      <Dropdown.Item\n                        icon=\"edit\"\n                        className=\"blue\"\n                        text='Editar'\n                        onClick={() => handleEditar(dataItem.id)}\n                      />\n                      <Dropdown.Item\n                        icon=\"delete\"\n                        className=\"red\"\n                        text='Eliminar'\n                        onClick={() => handleEliminar(dataItem.id, dataItem.name)}\n                      />\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </td>\n              )}\n            />\n            <Column\n              width={100}\n              title='ID'\n              field=\"id\"\n            />\n            <Column width={300} field=\"name\" title=\"NOMBRES\" />\n            <Column field=\"section.name\" title=\"SECCIÓN\" />\n            <Column field=\"slug\" title=\"URL\" />\n            {/* <Column width={250} field=\"icon\" title=\"ÍCONO\" /> */}\n          </Grid>\n          </div>\n      </div>\n      <BasicModal \n        title=\"Ficha categoría\" \n        show={show}\n        size=\"mini\"\n        actions={<>\n          <Button onClick={() => setShow(false)}>Cancelar</Button>\n          <Button primary onClick={() => formRef.current.handleSubmit()}>Guardar</Button>\n        </>}\n      >\n        <FormCategorias\n          ref={formRef}\n          setShow={setShow}\n          loadDataTable={requestDataIfNeeded}\n          idCategoria={idCategoria}\n        />\n      </BasicModal>\n      <BasicModal \n        title=\"Ficha subcategoría\" \n        show={showSub}\n        size=\"mini\"\n        actions={<>\n          <Button onClick={() => setShowSub(false)}>Cancelar</Button>\n          <Button primary onClick={() => formRefSub.current.handleSubmit()}>Guardar</Button>\n        </>}\n      >\n        <FormSubCategoria\n          ref={formRefSub}\n          setShow={setShowSub}\n          loadDataTable={requestDataIfNeeded}\n          id={idSubCategoria}\n          idParent={idCategoria}\n        />\n      </BasicModal>\n    </div>\n  );\n}\n\nexport default Categorias;"],"sourceRoot":""}