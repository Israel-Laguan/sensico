{"version":3,"sources":["components/Layout/HeaderPage/HeaderPage.js","hooks/useLoaderTable.js","hooks/useDimensionTable.js","actions/clientesActions.js","components/Clientes/ModalClientes/FormCliente.js","components/Clientes/ModalClientes/ModalClientes.js","pages/Clientes/Clientes.js"],"names":["HeaderPage","children","className","id","style","height","useLoaderTable","url","params","take","useState","skip","dataState","setDataState","urlBase","process","siHayParams","Object","keys","length","forEach","key","index","getUrlBase","baseUrl","setBaseUrl","dataResul","setDataResult","dataReceived","products","lastSuccess","useRef","pending","infoHelperRef","requestDataIfNeeded","a","reload","infoHelper","toODataString","current","addUrl","convertQueryString","loadAxios","method","response","json","data","call","undefined","body","total","count","console","log","error","useEffect","handleCustomSearch","e","valueSearch","target","value","search","dataStateChange","objQuery","queryString","useDimensionTable","width","window","innerWidth","innerHeight","windowSize","handleResize","gridElement","document","querySelector","newHeight","addEventListener","removeEventListener","getClientesAsync","Promise","resolve","authAxios","get","res","status","STATUS_OK","message","addCliente","dataEnviar","dispatch","type","CLIENTES","ADD_CLIENTE","ADD_CLIENTE_OK","Notify","success","ADD_CLIENTE_ERROR","updateCliente","idCliente","UPDATE_CLIENTE","UPDATE_CLIENTE_OK","UPDATE_CLIENTE_FAIL","getClienteById","GET_CLIENTE","GET_CLIENTE_OK","GET_CLIENTE_FAIL","deleteCliente","DELETE_CLIETE","DELETE_CLIENTE_OK","DELETE_CLIENTE_FAIL","FormCliente","formik","previewImg","setPreviewImg","upload","Grid","Column","Form","Group","Input","label","required","name","values","onChange","handleChange","errors","last_name","phone","company","country","occupation","Header","as","Divider","email","password","display","ref","reader","FileReader","readAsDataURL","files","setFieldValue","onload","result","Image","size","src","image","wrapped","Button","color","marginTop","onClick","click","ModalClientes","setOpenModal","editarCliente","useDispatch","cliente","useSelector","state","clientes","useFormik","initialValues","nuevoPassword","validationSchema","Yup","onSubmit","form","getElementById","formData","FormData","Modal","Content","Actions","primary","preventDefault","submitForm","validation","positive","typeError","Clientes","setEditarCliente","openModal","handleEditar","class","icon","sortable","pageable","onDataStateChange","cell","dataItem","overflow","Dropdown","floating","button","Menu","Item","text","Confirm","show","title","field","parseInt","ST_ACTIVO","Label","open"],"mappings":"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","file":"static/js/10.c123e547.chunk.js","sourcesContent":["import './HeaderPage.scss';\n\nconst HeaderPage = ({ children }) => {\n  return ( \n    <div className=\"navslide navwrap\" id=\"app_content_toolbar\" >\n      <div className=\"ui menu icon borderless\" data-color=\"inverted white\" style={{height:40}}>\n        { children }\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderPage;","import { useEffect, useRef, useState } from \"react\";\nimport { toODataString } from \"@progress/kendo-data-query\";\nimport response from \"../config/network/response\";\nimport loadAxios from \"../config/network/loadAxios\";\n\nconst useLoaderTable = ({ url = null, params = {}, take = 20 }) => {\n  const [dataState, setDataState] = useState({\n    take: take,\n    skip: 0,\n  });\n\n  const getUrlBase = () => {\n    let urlBase = `${process.env.REACT_APP_API_URL}/${url}`;\n    let siHayParams = false;\n\n    if(Object.keys(params).length > 0)\n    {\n\n      siHayParams = true;\n      \n      (Object.keys(params)).forEach((key, index) => {\n        \n        if(index === 0) {\n          urlBase += `?${key}=${params[key]}&`;\n        } else {\n          urlBase += `${key}=${params[key]}&`;\n        }\n      })\n    }\n\n    if(!siHayParams) {\n      urlBase += '?';\n    }\n\n    return urlBase;\n  }\n\n  const [baseUrl, setBaseUrl] = useState(getUrlBase());\n\n  const [dataResul, setDataResult] = useState();\n\n  const dataStateChange = (e) => {\n    setDataState(e.dataState);\n  };\n\n  const dataReceived = (products) => {\n    setDataResult(products);\n  };\n\n  const lastSuccess = useRef(\"\");\n  const pending = useRef(\"\");\n  const infoHelperRef = useRef(null);\n\n  const handleCustomSearch = (e) => {\n    if (e.key === 'Enter') {\n      const valueSearch = e.target.value;\n      requestDataIfNeeded(true, {search: valueSearch});\n    }\n  }\n\n  const requestDataIfNeeded = async (reload = false, infoHelper = null) => {\n    \n    if ((toODataString(dataState) === lastSuccess.current) && !reload) {\n      return;\n    }\n\n    pending.current = toODataString(dataState);\n    \n    try {\n\n      let addUrl = '';\n\n      if(infoHelper || infoHelperRef.current) {\n       \n        if(infoHelper !== infoHelperRef.current && infoHelper) {\n          infoHelperRef.current = infoHelper;\n        }\n        addUrl = convertQueryString(infoHelperRef.current);\n      }\n\n      const response = await loadAxios({ url: baseUrl + pending.current + addUrl, method: \"GET\" });\n      const json = response.data; \n      \n      lastSuccess.current = pending.current;\n      pending.current = \"\";\n\n      if (toODataString(dataState) === lastSuccess.current) {\n        dataReceived.call(undefined, {\n          data: json.body.data,\n          total: json.body.count,\n        });\n      } else {\n        requestDataIfNeeded();\n      }\n    } catch (error) {\n      console.log(error);\n      response.error(error);\n    }\n  };\n\n  useEffect(() => {\n    requestDataIfNeeded();\n  }, [dataState]);\n\n  return { dataResul, dataState, handleCustomSearch, setBaseUrl, setDataState, baseUrl, dataStateChange, requestDataIfNeeded };\n};\n\nexport default useLoaderTable;\n\nconst convertQueryString = (objQuery = {}) => {\n  if (!Object.keys(objQuery).length) {\n    return '';\n  }\n\n  let queryString = '';\n\n  (Object.keys(objQuery)).forEach(key => {\n    queryString += `&$${key}=${objQuery[key]}&`;\n  })\n\n  return queryString;\n\n}\n","import { useEffect, useState } from \"react\";\n\nconst useDimensionTable = () => {\n\n  const [windowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      \n      // let containerBody = document.querySelector('.app__container_body');\n\n      // let newHeight = window.innerHeight - 90;\n      let gridElement = document.querySelector('.k-widget.k-grid.grid');\n      // var dataArea = gridElement.querySelector(\".k-grid-container\");\n\n\n      var newHeight = window.innerHeight - 90;\n      // let diffContainer = containerBody.clientHeight - newHeight;\n\n      // console.log(diffContainer)\n\n      // newHeight = newHeight - diffContainer;\n\n      // var diff = gridElement.clientHeight - dataArea.clientHeight;\n      //gridElement.height(newHeight);\n      // dataArea.style.height = (newHeight - diff) + 'px';\n      if (gridElement) {\n        gridElement.style.height = `${newHeight}px`; \n      }\n      // setWindowSize({\n      //   width: window.innerWidth,\n      //   height: newHeight\n      // })\n  \n    }\n  \n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize())\n  \n  }, [])\n\n  return { width: windowSize.width, height: windowSize.height }\n\n}\n\nexport default useDimensionTable;\n","import { Notify } from \"notiflix\";\nimport authAxios from \"../config/authAxios\";\nimport { STATUS_OK } from \"../config/constants\";\nimport loadAxios from \"../config/network/loadAxios\";\nimport response from \"../config/network/response\";\nimport { CLIENTES } from \"./types\"\n\nexport const getClientesAsync = () => {\n  return new Promise(async (resolve) => {\n      try {\n        const res = await authAxios.get(`/customers`);\n  \n        if(res.data.status === STATUS_OK) {\n          resolve(res.data.body);\n        } else {\n          response.error(null, res.data.message);\n          resolve([]);\n        }\n      } catch (error) {\n        response.error(error);\n        resolve([]);\n      }\n  })\n}\n\nexport const addCliente = (dataEnviar) => {\n  return async dispatch => {\n    dispatch({\n      type: CLIENTES.ADD_CLIENTE\n    })\n    try {\n      \n      const res = await loadAxios({ url: '/customer', body: dataEnviar, method: 'POST' });\n\n      if (res.data.status === STATUS_OK) {\n        dispatch({\n          type: CLIENTES.ADD_CLIENTE_OK\n        });\n        Notify.success('Se creo un nuevo cliente');\n        return true;\n      } else {\n        dispatch({\n          type: CLIENTES.ADD_CLIENTE_ERROR\n        });\n        response.error(null, res.data.message);\n        return false;\n      }\n\n    } catch (error) {\n      dispatch({\n        type: CLIENTES.ADD_CLIENTE_ERROR\n      });\n      response.error(error);\n      return false;\n    }\n  }\n}\n\nexport const updateCliente = (idCliente, dataEnviar) => {\n  return async dispatch => {\n    dispatch({\n      type: CLIENTES.UPDATE_CLIENTE\n    })\n    try {\n      \n      const res = await loadAxios({ url: `/customer/${idCliente}`, body: dataEnviar, method: 'POST' });\n\n      if (res.data.status === STATUS_OK) {\n        dispatch({\n          type: CLIENTES.UPDATE_CLIENTE_OK\n        });\n        Notify.success('Se actualizo correctamente');\n        return true;\n      } else {\n        dispatch({\n          type: CLIENTES.UPDATE_CLIENTE_FAIL\n        });\n        response.error(null, res.data.message);\n        return false;\n      }\n\n    } catch (error) {\n      dispatch({\n        type: CLIENTES.UPDATE_CLIENTE_FAIL\n      });\n      response.error(error);\n      return false;\n    }\n  }\n}\n\nexport const getClienteById = (idCliente) => {\n  return async dispatch => {\n    dispatch({\n      type: CLIENTES.GET_CLIENTE\n    })\n\n    try {\n      \n      const res = await loadAxios({ url: `/customer/${idCliente}`, method: 'GET' });\n\n      if (res.data.status === STATUS_OK) {\n        dispatch({\n          type: CLIENTES.GET_CLIENTE_OK,\n          value: res.data.body\n        });\n        return true;\n      } else {\n        dispatch({\n          type: CLIENTES.GET_CLIENTE_FAIL\n        });\n        response.error(null, res.data.message);\n        return false;\n      }\n\n    } catch (error) {\n      dispatch({\n        type: CLIENTES.GET_CLIENTE_FAIL\n      });\n      response.error(error);\n      return false;\n    }\n  }\n}\n\nexport const deleteCliente = idCliente => {\n  return async dispatch => {\n    dispatch({\n      type: CLIENTES.DELETE_CLIETE\n    })\n    try {\n      const res = await loadAxios({ url: `/customer/${idCliente}`, method:'DELETE' })\n\n      if(res.data.status === STATUS_OK) {\n        dispatch({\n          type: CLIENTES.DELETE_CLIENTE_OK\n        })\n        response.success('Se elimino el cliente correctamente.')\n        return true;\n      } else {\n        dispatch({\n          type: CLIENTES.DELETE_CLIENTE_FAIL\n        })\n        response.error(null, response.data.message);\n        return false;\n      }\n    } catch (error) {\n      dispatch({\n        type: CLIENTES.DELETE_CLIENTE_FAIL\n      })\n      response.error(error);\n      return false;\n    }\n  }\n}\n\nexport const updateEstadoCliente = async (idCliente, idEstado) => {\n  try {\n\n    const data = {\n      idEstado: idEstado\n    }\n\n    const res = await loadAxios({ url: `/customer/${idCliente}/estado`, body: data, method: 'PUT' });\n    if(res.data.status === STATUS_OK) {\n      Notify.success('Se cambio el estado correctamente');\n      return true;\n    } else {\n      response.error(null, 'Opps hubo un error inesperado...');\n      return false;\n    }\n  } catch (error) {\n    response.error(error);\n  }\n}\n","import { Form, Grid, Button, Image, Header, Divider } from \"semantic-ui-react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\n\nconst FormCliente = ({ formik }) => {\n\n  const [previewImg, setPreviewImg] = useState(null);\n  const upload = useRef(null);\n\n  const clickUpload = () => {\n    upload.current.click();\n  };\n\n  const renderImagen = e => {\n    let reader = new FileReader();\n\n    reader.readAsDataURL(e.target.files[0]);\n    formik.setFieldValue('nuevaImg', e.target.files)\n\n    reader.onload = () => {\n      // formik.setFieldValue('imagen', reader.result);\n      setPreviewImg(reader.result);\n    }\n  }\n\n\n  return (\n    <Grid>\n      <Grid.Column width={11}>\n        <Form id=\"form-cliente\">\n          <Form.Group>\n            <Form.Input\n              label=\"Nombres\"\n              required\n              width={7}\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.errors.name}\n            />\n            <Form.Input\n              label=\"Apellidos\" \n              required\n              width={8}\n              name=\"last_name\"\n              value={formik.values.last_name}\n              onChange={formik.handleChange}\n              error={formik.errors.last_name}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Input \n              label=\"Teléfono\"\n              required \n              width={7}\n              name=\"phone\"\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n              error={formik.errors.phone}\n            />\n            <Form.Input \n              label=\"Compañía\"\n              width={5}\n              name=\"company\"\n              value={formik.values.company}\n              onChange={formik.handleChange}\n              error={formik.errors.company}\n            />\n            <Form.Input \n              label=\"País\"\n              width={3}\n              name=\"country\"\n              value={formik.values.country}\n              onChange={formik.handleChange}\n              error={formik.errors.country}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Input \n              label=\"Ocupación\"\n              width={15}\n              name=\"occupation\"\n              value={formik.values.occupation}\n              onChange={formik.handleChange}\n              error={formik.errors.occupation}\n            />\n          </Form.Group>\n          <Header as=\"h3\">Datos usuario</Header>\n          <Divider />\n          <Form.Group>\n            <Form.Input \n              label=\"Correo\" \n              required \n              width={8}\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.errors.email}\n            />\n            \n            <Form.Input \n              type=\"password\"\n              label=\"Contraseña\"\n              required\n              width={8}\n              name=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.errors.password}\n            />\n            \n          </Form.Group>\n          <input type=\"hidden\" name=\"fechaNacimiento\" value=\"2021-10-05\" />\n          <input type=\"file\" style={{ display: \"none\" }} ref={upload} name=\"imageBim\" onChange={renderImagen} />\n        </Form>\n      </Grid.Column>\n      <Grid.Column width={5}>\n        <Image\n          className=\"\"\n          size=\"medium\"\n          src={`${!previewImg ? `${process.env.REACT_APP_HOST_URL}${formik.values.image}` : previewImg}`}\n          wrapped\n        />\n        <Button color=\"grey\" style={{ marginTop: 10 }} onClick={clickUpload}>\n          Click para seleccionar una imagen\n        </Button>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default FormCliente;\n\n\n","import { Button, Modal, Tab } from \"semantic-ui-react\"\nimport FormCliente from \"./FormCliente\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { addCliente, updateCliente } from \"../../../actions/clientesActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst ModalClientes = ({ setOpenModal, requestDataIfNeeded, editarCliente }) => {\n\n  const dispatch = useDispatch(); \n  const { cliente } = useSelector(state => state.clientes); \n  \n  const formik = useFormik({\n    initialValues: editarCliente ? {...cliente, nuevoPassword: ''} : initialValues(),\n    validationSchema: Yup.object(validationSchema(editarCliente)),\n    onSubmit: async (values) => {\n      const form = document.getElementById('form-cliente');\n      const formData = new FormData(form);\n\n      let res = null;\n\n      if(!values.id) {\n        res = await dispatch(addCliente(formData));\n      } else {\n        res = await dispatch(updateCliente(values.id, formData));\n      }\n\n      if(res) {\n        setOpenModal(false);\n        requestDataIfNeeded(true);\n      }\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formik.submitForm();\n  }\n\n  return (\n    <>\n      <Modal.Header>\n        {editarCliente ? 'Inspeccionar Cliente' : 'Nuevo Cliente'}\n      </Modal.Header>\n      <Modal.Content>\n        <FormCliente formik={formik} editarCliente={editarCliente} />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpenModal(false)}>\n          Cancelar\n        </Button>\n        <Button primary onClick={handleSubmit}>\n          Guardar\n        </Button>\n      </Modal.Actions>\n    </>\n  );\n}\n\nexport default ModalClientes;\n\nconst initialValues = () => {\n  return {\n    \"name\": \"\",\n    \"last_name\": \"\",\n    \"email\": \"\",\n    \"company\": \"\",\n    \"country\": \"\",\n    \"password\": \"\",\n    \"occupation\": \"\",\n    \"phone\": \"\",\n  }\n}\n\nconst validationSchema = (editarCliente) => {\n  const validation = {\n    name: Yup\n    .string()\n    .required('Este campo es obligatorio'),\n    last_name: Yup\n      .string()\n      .required('Este campo es obligatorio'),\n    company: Yup\n      .string(),\n    country: Yup\n      .string(),\n    occupation: Yup\n      .string(),\n    phone: Yup\n      .number()\n      // .max(9, 'Como máximo 8 caracteres.')\n      .positive(\"Solo números positivos\")\n      .required('Este campo es requerido')\n      .typeError('Solo se permiten números'),\n    email: Yup\n      .string().email('Formato no correcto')\n      .required('Este campo es requerido.'),\n    password: Yup.string().required('Este campo es requerido'),\n    }\n\n  if(editarCliente) {\n    validation.password = Yup.string();\n  }\n  return validation;\n}\n","import HeaderPage from \"../../components/Layout/HeaderPage\";\nimport {\n  Grid,\n  GridColumn as Column\n} from \"@progress/kendo-react-grid\";\nimport { Button, Dropdown, Image, Input, Label, Modal } from \"semantic-ui-react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport useLoaderTable from \"../../hooks/useLoaderTable\";\nimport ModalClientes from '../../components/Clientes/ModalClientes';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteCliente, getClienteById, updateEstadoCliente } from \"../../actions/clientesActions\";\nimport { Confirm } from \"notiflix\";\nimport useDimensionTable from \"../../hooks/useDimensionTable\";\nimport { ST_ACTIVO, ST_INACTIVO } from \"../../config/constants\";\n\nconst Clientes = () => {\n\n  const { dataResul, dataState, dataStateChange, requestDataIfNeeded } = useLoaderTable({ url: 'customers' });\n  const [editarCliente, setEditarCliente] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  useDimensionTable();\n\n  const handleEditar = async (idCliente) => {\n    const res = await dispatch(getClienteById(idCliente));\n  \n    if(res) {\n      setEditarCliente(true);\n      setOpenModal(true);\n    }\n  }\n\n  // const handleEditarEstado = async (idCliente, estadoNuevo) => {\n  //   const res = await updateEstadoCliente(idCliente, estadoNuevo);\n  //   if(res) {\n  //     requestDataIfNeeded(true);\n  //   }\n  // }\n\n  const handleEliminar = (idCliente) => {\n    Confirm.show(\n      'CLIENTES',\n      `¿Desea eliminar al cliente ${idCliente}?`,\n      'Aceptar',\n      'Cancelar',\n      async function(){\n        const res = await dispatch(deleteCliente(idCliente));\n        if(res) {\n          requestDataIfNeeded(true);\n        }\n      }\n    );\n  }\n\n  return (\n    <div className=\"Clientes\">\n      <HeaderPage>\n        <div class=\"item ui colhidden\">\n          <button class=\"ui icon button\" onClick={() => requestDataIfNeeded(true)}>\n            <i class=\"sync icon\"></i>\n          </button>\n        </div>\n        <div className=\"item ui colhidden\">\n          <div className=\"ui big breadcrumb\">\n            <i className=\"right chevron icon divider\"></i>\n            <h2 className=\"section active\">CLIENTES</h2>\n          </div>\n        </div>\n        <div className=\"item ui colhidden\">\n            <Button icon onClick={() => {\n              setOpenModal(true);\n              setEditarCliente(false);\n            }}>\n              <FaPlus /> Nuevo Cliente\n            </Button>\n          </div>\n          {/* <div className=\"right menu colhidden\">\n            <div className=\"item ui colhidden\">\n              <Input icon='search' onKeyDown={handleCustomSearch} placeholder='Buscar cliente...' />\n            </div>\n          </div> */}\n      </HeaderPage>\n      <div className=\"Cliente__body app__container_body\">\n        <div className=\"Clientes__tabla\">\n          <Grid\n              sortable={true}\n              pageable={true}\n              {...dataState}\n              {...dataResul}\n              onDataStateChange={dataStateChange}\n              className=\"grid\"\n            >\n              <Column\n                width={50}\n                cell={({ dataItem }) => (\n                  <td style={{overflow: \"inherit\"}}>\n                    <Dropdown\n                      icon='ellipsis vertical'\n                      floating\n                      button\n                      className='icon circular compact ui left pointing'\n                    >\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          icon=\"edit\"\n                          className=\"blue\"\n                          text='Editar'\n                          onClick={() => handleEditar(dataItem.id)}\n                        />\n                        <Dropdown.Item\n                          icon=\"delete\"\n                          className=\"red\"\n                          text='Eliminar'\n                          onClick={() => handleEliminar(dataItem.id)}\n                        />\n                        {/* {\n                          parseInt(dataItem.idTipoEstado) === ST_ACTIVO ? (\n                            <Dropdown.Item \n                              icon=\"lock\"\n                              text='Desabilitar'\n                              onClick={() => handleEditarEstado(dataItem.id, ST_INACTIVO)}\n                            />\n                          ) : (\n                            <Dropdown.Item \n                              icon=\"unlock\"\n                              text='Activar'\n                              onClick={() => handleEditarEstado(dataItem.id, ST_ACTIVO)}\n                            />\n                          )\n                        } */}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </td>\n                )}\n              />\n              <Column\n                width={70}\n                title='ID'\n                field=\"id\"\n              />\n              <Column \n                title=\"IMAGEN\"\n                width={110}\n                cell={({ dataItem }) => (\n                  <td>\n                    <Image width={50} height={50} src={`${process.env.REACT_APP_HOST_URL}${dataItem.image}`} />\n                  </td>\n                )}\n              />\n              <Column field=\"name\" width={250} title=\"NOMBRES\" />\n              <Column field=\"last_name\" width={250} title=\"APELLIDOS\" />\n              <Column field=\"email\" width={250} title=\"CORREO\" />\n              <Column field=\"phone\" width={200} title=\"CELULAR\" />\n              <Column field=\"company\" width={200} title=\"COMPAÑIA\" />\n              <Column \n                title=\"ESTADO\"\n                width={100}\n                cell={({ dataItem }) => (\n                  <td>\n                    {\n                        parseInt(dataItem.status) === ST_ACTIVO ? (\n                          <Label color=\"green\" size=\"tiny\">Activo</Label>\n                      ) : (\n                        <Label color=\"red\" size=\"tiny\">Inactivo</Label>\n                      )\n                    }\n                  </td>\n                )}\n              />\n            </Grid>\n        </div>\n      </div>\n        <Modal open={openModal}>\n          {\n            openModal && <ModalClientes \n              setOpenModal={setOpenModal}\n              requestDataIfNeeded={requestDataIfNeeded}\n              editarCliente={editarCliente}\n            />\n          }\n        </Modal>\n    </div>\n  );\n}\n\nexport default Clientes;"],"sourceRoot":""}